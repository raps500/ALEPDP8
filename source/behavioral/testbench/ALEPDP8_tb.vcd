$date
  Mon Mar 06 13:15:56 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module alepdp8_tb $end
$var reg 12 ! data_to_cpu[11:0] $end
$var reg 12 " cpu_data_to_mem[11:0] $end
$var reg 12 # cpu_addr[11:0] $end
$var reg 1 $ cpu_read $end
$var reg 1 % cpu_write $end
$var reg 1 & mem_ready $end
$var reg 1 ' clk $end
$var reg 1 ( reset $end
$var reg 12 ) io_to_cpu[11:0] $end
$var reg 12 * io_to_io[11:0] $end
$var reg 1 + load_addr $end
$var reg 1 , load_mem $end
$var reg 1 - load_a $end
$var reg 1 . load_b $end
$var reg 1 / load_p $end
$var reg 1 0 inc_mem $end
$var reg 1 1 dec_mem $end
$var reg 1 2 load_m $end
$var reg 1 3 disp_a $end
$var reg 1 4 disp_b $end
$var reg 1 5 disp_m $end
$var reg 1 6 disp_p $end
$var reg 1 7 single_step $end
$var reg 1 8 cpu_halted $end
$var reg 1 9 cpu_fetch $end
$var reg 1 : cpu_run $end
$var reg 1 ; srh $end
$var reg 1 < hin $end
$scope module apdp8cpu_i $end
$var reg 1 = clk_i $end
$var reg 1 > rst_i $end
$var reg 12 ? data_i[11:0] $end
$var reg 12 @ data_o[11:0] $end
$var reg 12 A addr_o[11:0] $end
$var reg 1 B read_o $end
$var reg 1 C write_o $end
$var reg 12 D ibus[11:0] $end
$var reg 12 E ac[11:0] $end
$var reg 12 F ad_sum[11:0] $end
$var reg 12 G and_q[11:0] $end
$var reg 12 H ir[11:0] $end
$var reg 12 I ma[11:0] $end
$var reg 12 J mbi[11:0] $end
$var reg 12 K mbo[11:0] $end
$var reg 12 L pc[11:0] $end
$var reg 10 M seq[9:0] $end
$var reg 1 N ad_sum_to_ibus $end
$var reg 1 O alu_left_ac $end
$var reg 1 P clr_ac $end
$var reg 1 Q halted $end
$var reg 1 R inc_pc $end
$var reg 12 S left[11:0] $end
$var reg 1 T link $end
$var reg 1 U link_in_ac0 $end
$var reg 1 V sl_ac $end
$var reg 1 W sr_ac $end
$var reg 1 X clr_link $end
$var reg 1 Y cmp_link $end
$var reg 1 Z set_link $end
$var reg 1 [ sto_ac $end
$var reg 1 \ sto_link $end
$var reg 1 ] sto_ir $end
$var reg 1 ^ sto_ma $end
$var reg 1 _ sto_mbi $end
$var reg 1 ` sto_mbo $end
$var reg 1 a sto_pc $end
$var reg 1 b ac_to_ibus $end
$var reg 1 c and_q_to_ibus $end
$var reg 1 d pc_to_ibus $end
$var reg 1 e addr_p0_to_ibus $end
$var reg 1 f addr_cp_to_ibus $end
$var reg 1 g ir_and $end
$var reg 1 h ir_tad $end
$var reg 1 i ir_isz $end
$var reg 1 j ir_dca $end
$var reg 1 k ir_jms $end
$var reg 1 l ir_jmp $end
$var reg 1 m ir_io $end
$var reg 1 n ir_opr1 $end
$var reg 1 o ir_opr2 $end
$var reg 1 p bit_cla $end
$var reg 1 q bit_cll $end
$var reg 1 r bit_cma $end
$var reg 1 s bit_cml $end
$var reg 1 t bit_rar $end
$var reg 1 u bit_ral $end
$var reg 1 v bit_r2 $end
$var reg 1 w bit_iac $end
$scope module pdp8dis_i $end
$var reg 1 x clk_i $end
$var reg 1 y reset_i $end
$var reg 1 z decode_i $end
$var reg 1 { halted_i $end
$var reg 12 | areg_i[11:0] $end
$var reg 12 } ireg_i[11:0] $end
$var reg 12 !" mreg_i[11:0] $end
$var reg 12 "" preg_i[11:0] $end
$var reg 1 #" link_i $end
$var reg 12 $" ir[11:0] $end
$var reg 1 %" ir_and $end
$var reg 1 &" ir_tad $end
$var reg 1 '" ir_isz $end
$var reg 1 (" ir_dca $end
$var reg 1 )" ir_jms $end
$var reg 1 *" ir_jmp $end
$var reg 1 +" ir_io $end
$var reg 1 ," ir_opr1 $end
$var reg 1 -" ir_opr2 $end
$var reg 1 ." bit_cla $end
$var reg 1 /" bit_cll $end
$var reg 1 0" bit_cma $end
$var reg 1 1" bit_cml $end
$var reg 1 2" bit_rar $end
$var reg 1 3" bit_ral $end
$var reg 1 4" bit_r2 $end
$var reg 1 5" bit_iac $end
$var reg 1 6" bit_sma $end
$var reg 1 7" bit_sza $end
$var reg 1 8" bit_snl $end
$var reg 1 9" bit_rsk $end
$var reg 1 :" bit_osr $end
$var reg 1 ;" bit_hlt $end
$var reg 1 <" bit_0 $end
$var reg 12 =" addr[11:0] $end
$var integer 32 >" maj $end
$var integer 32 ?" io $end
$var integer 32 @" sr1 $end
$var integer 32 A" sr2 $end
$var reg 6 B" io_select[5:0] $end
$upscope $end
$upscope $end
$scope module coremem_i $end
$var reg 1 C" clock $end
$var reg 1 D" clocken $end
$var reg 1 E" reset $end
$var reg 1 F" we $end
$var reg 12 G" address[11:0] $end
$var reg 12 H" data[11:0] $end
$var reg 12 I" q[11:0] $end
$comment ramdata is not handled $end
$var integer 32 J" raddr $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b111010000000 !
b000000000000 "
b000000000000 #
0$
U%
U&
0'
1(
b000000000000 )
b000000000000 *
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
U8
U9
0:
0;
U<
0=
1>
b111010000000 ?
b000000000000 @
b000000000000 A
0B
UC
b000000000000 D
b000000000000 E
b000000000000 F
b000000000000 G
b000000000000 H
b000000000000 I
b000000000000 J
b000000000000 K
b000000000000 L
b0000000001 M
UN
UO
0P
0Q
UR
b000000000000 S
0T
UU
UV
UW
0X
UY
UZ
U[
U\
0]
1^
U_
U`
Ua
Ub
Uc
1d
Ue
Uf
1g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
1y
0z
0{
b000000000000 |
b000000000000 }
b000000000000 !"
b000000000000 ""
0#"
b000000000000 $"
1%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
b000000000000 ="
b0 >"
b0 ?"
b0 @"
b0 A"
bUUUUUU B"
0C"
1D"
0E"
UF"
b000000000000 G"
b000000000000 H"
b111010000000 I"
b0 J"
#50000000
1'
1=
1x
1C"
#100000000
0'
0=
0x
0C"
#150000000
1'
1=
1x
1C"
#200000000
0'
0=
0x
0C"
#250000000
1'
1=
1x
1C"
#300000000
0'
0=
0x
0C"
#333000000
0(
0>
0y
#350000000
1$
1&
1'
1=
1B
b0000000010 M
1]
0^
0d
1x
1C"
#400000000
0'
0=
0x
0C"
#450000000
0$
U&
1'
1=
0B
b111010000000 H
b0000000100 M
1P
0]
0g
1n
1p
1x
1z
b111010000000 }
b111010000000 $"
0%"
1,"
1."
b111 >"
b10000 ?"
1C"
#500000000
0'
0=
0x
0C"
#550000000
1'
1=
b0000001000 M
0P
1x
0z
1C"
#600000000
0'
0=
0x
0C"
#650000000
1'
1=
b0000010000 M
1x
1C"
#700000000
0'
0=
0x
0C"
#750000000
1'
1=
b0000100000 M
1x
1C"
#800000000
0'
0=
0x
0C"
#850000000
1'
1=
b0001000000 M
1x
1C"
#900000000
0'
0=
0x
0C"
#950000000
1'
1=
b0010000000 M
1x
1C"
#1000000000
0'
0=
0x
0C"
#1050000000
1'
1=
b0100000000 M
1x
1C"
#1100000000
0'
0=
0x
0C"
#1150000000
1'
1=
b1000000000 M
1x
1C"
#1200000000
0'
0=
0x
0C"
#1250000000
1'
1=
b0000000001 M
1^
1d
1x
1C"
#1300000000
0'
0=
0x
0C"
#1350000000
1$
1&
1'
1=
1B
b0000000010 M
1]
0^
0d
1x
1C"
#1400000000
0'
0=
0x
0C"
#1450000000
0$
U&
1'
1=
0B
b0000000100 M
1P
0]
1x
1z
1C"
#1500000000
0'
0=
0x
0C"
#1550000000
1'
1=
b0000001000 M
0P
1x
0z
1C"
#1600000000
0'
0=
0x
0C"
#1650000000
1'
1=
b0000010000 M
1x
1C"
#1700000000
0'
0=
0x
0C"
#1750000000
1'
1=
b0000100000 M
1x
1C"
#1800000000
0'
0=
0x
0C"
#1850000000
1'
1=
b0001000000 M
1x
1C"
#1900000000
0'
0=
0x
0C"
#1950000000
1'
1=
b0010000000 M
1x
1C"
#2000000000
0'
0=
0x
0C"
